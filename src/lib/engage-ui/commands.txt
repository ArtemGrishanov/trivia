
// добавить новый экран со свойствами по умолчанию
remix.addHashlistElement('router.screens')

// добавить новый экран со свойствами
remix.addHashlistElement('router.screens', undefined, {newElement: {backgroundColor: 'red', tags: 'screen question'} })

Смотреть:
store.getState().router.screens

// изменить фон экрана (после добавления)
var screenId = store.getState().router.screens.getId(0);
remix.setData({['router.screens.'+screenId+'.backgroundColor']: '#ff8888'});

// добавить текст на экран
var screenId = store.getState().router.screens.getId(0)
remix.addHashlistElement('router.screens.'+screenId+'.components', undefined, { newElement: {displayName: 'Text', color: 'red'} })
store.getState().router.screens[screenId].components

// изменить цвет текста (после добавления)
var screenId = store.getState().router.screens.getId(0);
var compId = store.getState().router.screens[screenId].components.getId(0);
remix.setData({['router.screens.'+screenId+'.components.'+compId+'.color']: 'blue'});

// изменить координату компонента
..

// добавить картинку
var screenId = store.getState().router.screens.getId(0)
remix.addHashlistElement('router.screens.'+screenId+'.components', undefined, { newElement: {displayName: 'ProgressiveImage', src: 'http://p.testix.me/temp/cat1500x1000.jpg', maxWidth: 300} })
store.getState().router.screens[screenId].components


-----
Remix:
addTrigger
registerTriggerAction
extendSchema

Events:
'app_start' - componentDidMount для главного компонент EngageApp
data: -

'onclick' - сделан клик на компонент
data: all component props (width, tags, data,  displayName..) а также специфические для компонентов свойства например (text, color.. для кнопки)

'property_updated' - свойство добавлено, удалено или изменено
data:

properties_updated ?
data: Map { propName: value }

